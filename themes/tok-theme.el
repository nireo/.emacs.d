;;; tok-theme.el --- Comfy light theme -*- lexical-binding: t; -*-

;; Author: Topi Kettunen <topi@topikettunen.com>
;; URL: https://github.com/topikettunen/tok-theme
;; Version: 0.1
;; Package-Requires: ((emacs "26.1"))

;; This is free and unencumbered software released into the public domain.
;;
;; Anyone is free to copy, modify, publish, use, compile, sell, or
;; distribute this software, either in source code form or as a compiled
;; binary, for any purpose, commercial or non-commercial, and by any
;; means.
;;
;; In jurisdictions that recognize copyright laws, the author or authors
;; of this software dedicate any and all copyright interest in the
;; software to the public domain. We make this dedication for the benefit
;; of the public at large and to the detriment of our heirs and
;; successors. We intend this dedication to be an overt act of
;; relinquishment in perpetuity of all present and future rights to this
;; software under copyright law.
;;
;; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
;; EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
;; MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
;; IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
;; OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
;; ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
;; OTHER DEALINGS IN THE SOFTWARE.
;;
;; For more information, please refer to <https://unlicense.org>

;; This file is not part of Emacs.

;;; Commentary:

;; Tok is a comfy light coloured theme.

;;; Code:

(deftheme tok
  "Simple, brutalistic and minimal Emacs theme")

(let ((class '((class color) (min-colors 89))))
  (custom-theme-set-faces
   'tok

   ;; Basic faces
   `(default ((,class (:foreground "gray20" :background "white"))))
   `(bold ((,class (:weight bold))))
   `(italic ((,class (:slant italic))))
   `(bold-italic ((,class (:weight bold :slant italic))))
   `(underline ((,class (:underline t))))
   `(shadow ((,class (:foreground "grey50"))))
   `(link ((,class (:underline t :foreground "blue"))))
   `(link-visited ((,class (:foreground "magenta4" :inherit link))))
   `(highlight ((,class (:foreground "black" :background "darkseagreen2"))))
   `(region ((,class (,@(and (>= emacs-major-version 27) '(:extend t))
                      :background "light goldenrod yellow"))))
   `(secondary-selection ((,class (,@(and (>= emacs-major-version 27) '(:extend t))
                                   :background "yellow1"))))
   `(trailing-whitespace ((,class (:background "red1"))))
   `(vertical-border ((,class (:inherit shadow))))
   `(internal-border ((t (nil))))
   `(fringe ((,class (:inherit default))))
   `(scroll-bar ((,class (:foreground "black"))))
   `(border ((t (nil))))
   `(cursor ((,class (:background "black"))))
   `(mouse ((t (nil))))
   `(tool-bar ((,class (:foreground "black" :background "grey75"))))
   `(tab-bar ((,class (:foreground "black" :background "grey85" :inherit variable-pitch))))
   `(tab-line ((,class (:height 0.9 :foreground "black" :background "grey85" :inherit variable-pitch))))
   `(error ((,class (:weight bold :foreground "red1"))))
   `(warning ((,class (:weight bold :foreground "DarkOrange"))))
   `(success ((,class (:weight bold :foreground "ForestGreen"))))
   `(minibuffer-prompt ((,class (:foreground "blue"))))
   `(menu ((,class (:inverse-video t))))
   `(button ((,class (:inherit link))))

   ;; nobreak
   `(nobreak-space ((,class (:underline t :inherit escape-glyph))))
   `(nobreak-hyphen ((,class (:foreground "brown"))))

   ;; line-numbers
   `(line-number ((,class (:inherit (shadow default)))))
   `(line-number-current-line ((,class (:inherit line-number))))
   `(line-number-major-tick ((,class (:weight bold :background "grey85"))))
   `(line-number-minor-tick ((,class (:weight bold :background "grey95"))))

   ;; hl-line
   `(hl-line ((,class (,@(and (>= emacs-major-version 27) '(:extend t))
                       :background "light yellow"))))

   ;; mode-line
   `(mode-line ((,class (:foreground "black" :background "LightBlue1" :box (:line-width -1 :style released-button)))))
   (when (>= emacs-major-version 29)
     `(mode-line-active ((,class (:inherit mode-line)))))
   `(mode-line-inactive ((,class (:weight light :foreground "grey20" :background "LightCyan1" :box (:line-width -1 :color "LightCyan2" :style nil)))))
   `(mode-line-buffer-id ((,class (:weight bold))))
   `(mode-line-highlight ((t (nil))))
   `(mode-line-emphasis ((,class (:weight bold))))

   ;; header
   `(header-line ((,class (:inherit mode-line))))
   `(header-line-highlight ((,class (:inherit mode-line-highlight))))

   ;; window
   `(window-divider ((,class (:foreground "gray60"))))
   `(window-divider-first-pixel ((,class (:foreground "gray80"))))
   `(window-divider-last-pixel ((,class (:foreground "gray40"))))

   ;; help
   `(help-argument-name ((,class (:inherit italic))))
   `(help-key-binding ((,class (:foreground "DarkBlue" :background "grey96" :inherit fixed-pitch))))
   `(help-for-help-header ((,class (:height 1.26))))

   ;; tty
   `(tty-menu-enabled-face ((,class (:weight bold :foreground "yellow" :background "blue"))))
   `(tty-menu-disabled-face ((,class (:foreground "lightgray" :background "blue"))))
   `(tty-menu-selected-face ((,class (:background "red"))))

   ;; show-paren
   `(show-paren-match ((,class (:foreground "black" :background "pale turquoise"))))
   `(show-paren-match-expression ((,class (:inherit show-paren-match))))
   `(show-paren-mismatch ((,class (:foreground "white" :background "purple"))))

   ;; completions
   `(completions-group-title ((,class (:slant italic :inherit shadow))))
   `(completions-group-separator ((,class (:strike-through t :inherit shadow))))
   `(completions-annotations ((t (nil))))
   `(completions-first-difference ((,class (:inherit bold))))
   `(completions-common-part ((,class (:foreground "blue3"))))

   ;; font-lock
   `(font-lock-comment-face ((,class (:foreground "forest green"))))
   `(font-lock-comment-delimiter-face ((,class (:inherit font-lock-comment-face))))
   `(font-lock-string-face ((,class (:foreground "Firebrick"))))
   `(font-lock-doc-face ((,class (:inherit font-lock-comment-face))))
   `(font-lock-doc-markup-face ((,class (:inherit font-lock-constant-face))))
   `(font-lock-keyword-face ((,class (:foreground "blue4"))))
   `(font-lock-builtin-face ((,class (:foreground "blue4"))))
   `(font-lock-function-name-face ((t nil)))
   `(font-lock-variable-name-face ((t nil)))
   `(font-lock-type-face ((,class (:foreground "blue4"))))
   `(font-lock-constant-face ((,class (:foreground "purple"))))
   `(font-lock-warning-face ((,class (:inherit error))))
   `(font-lock-negation-char-face ((t nil)))
   `(font-lock-preprocessor-face ((,class (:inherit font-lock-comment-face))))
   `(font-lock-regexp-grouping-backslash ((t nil)))
   `(font-lock-regexp-grouping-construct ((t nil)))

   ;; Shell script
   `(sh-heredoc ((t nil)))
   `(sh-quoted-exec ((t nil)))

   ;; isearch
   `(isearch ((,class (:foreground "lightskyblue1" :background "magenta3"))))
   `(isearch-fail ((,class (:foreground "black" :background "RosyBrown1"))))
   `(lazy-highlight ((,class (:foreground "black" :background "paleturquoise"))))
   `(isearch-group-1 ((,class (:foreground "lightskyblue1" :background "#f000f0"))))
   `(isearch-group-2 ((,class (:foreground "lightskyblue1" :background "#a000a0"))))

   ;; tab-bar
   `(tab-bar-tab ((,class (:inherit tab-bar))))
   `(tab-bar-tab-inactive ((,class (:background "grey75" :inherit tab-bar-tab))))
   `(tab-bar-tab-group-current ((,class (:weight bold :box nil :inherit tab-bar-tab))))
   `(tab-bar-tab-group-inactive ((t (nil))))
   `(tab-bar-tab-ungrouped ((t (nil))))

   ;; vc
   `(vc-state-base ((t (nil))))
   `(vc-up-to-date-state ((,class (:inherit vc-state-base))))
   `(vc-needs-update-state ((,class (:inherit vc-state-base))))
   `(vc-locked-state ((,class (:inherit vc-state-base))))
   `(vc-locally-added-state ((,class (:inherit vc-state-base))))
   `(vc-conflict-state ((,class (:inherit vc-state-base))))
   `(vc-removed-state ((,class (:inherit vc-state-base))))
   `(vc-missing-state ((,class (:inherit vc-state-base))))
   `(vc-edited-state ((,class (:inherit vc-state-base))))

   ;; package
   `(package-help-section-name ((t (nil))))
   `(package-name ((,class (:inherit link))))
   `(package-description ((,class (:inherit default))))
   `(package-status-built-in ((,class (:inherit font-lock-builtin-face))))
   `(package-status-external ((,class (:inherit package-status-built-in))))
   `(package-status-available ((,class (:inherit default))))
   `(package-status-new ((t (nil))))
   `(package-status-held ((,class (:inherit font-lock-constant-face))))
   `(package-status-disabled ((,class (:inherit font-lock-warning-face))))
   `(package-status-installed ((,class (:inherit font-lock-comment-face))))
   `(package-status-dependency ((,class (:inherit package-status-installed))))
   `(package-status-unsigned ((,class (:inherit font-lock-warning-face))))
   `(package-status-incompat ((,class (:inherit error))))
   `(package-status-avail-obso ((,class (:inherit package-status-incompat))))
   `(info-node ((,class (:weight bold :slant italic :foreground "brown"))))

   ;; info
   `(info-title-1 ((,class (:height 1.2 :inherit info-title-2))))
   `(info-title-2 ((,class (:height 1.2 :inherit info-title-3))))
   `(info-title-3 ((,class (:height 1.2 :inherit info-title-4))))
   `(info-title-4 ((,class (:weight bold :inherit variable-pitch))))
   `(info-menu-header ((,class (:weight bold :inherit variable-pitch))))
   `(info-menu-star ((,class (:foreground "red1"))))
   `(info-xref ((,class (:inherit link))))
   `(info-xref-visited ((t (nil))))
   `(info-header-xref ((,class (:inherit info-xref))))
   `(info-header-node ((,class (:inherit info-node))))
   `(info-index-match ((,class (:inherit match))))
   `(Info-quoted ((,class (:inherit fixed-pitch-serif))))

   ;; ido
   `(ido-first-match ((,class (:weight bold))))
   `(ido-only-match ((,class (:foreground "ForestGreen"))))
   `(ido-subdir ((,class (:foreground "red1"))))
   `(ido-virtual ((,class (:inherit font-lock-builtin-face))))
   `(ido-indicator ((,class (:width condensed :foreground "yellow1" :background "red1"))))
   `(ido-incomplete-regexp ((,class (:inherit font-lock-warning-face))))

   ;; ansi-color
   `(ansi-color-bold ((,class (:inherit bold))))
   `(ansi-color-faint ((,class (:weight light))))
   `(ansi-color-italic ((,class (:inherit italic))))
   `(ansi-color-underline ((,class (:inherit underline))))
   `(ansi-color-slow-blink ((t (nil))))
   `(ansi-color-fast-blink ((t (nil))))
   `(ansi-color-inverse ((,class (:inverse-video t))))
   `(ansi-color-black ((,class (:foreground "black" :background "black"))))
   `(ansi-color-red ((,class (:foreground "red3" :background "red3"))))
   `(ansi-color-green ((,class (:foreground "green3" :background "green3"))))
   `(ansi-color-yellow ((,class (:foreground "yellow3" :background "yellow3"))))
   `(ansi-color-blue ((,class (:foreground "blue2" :background "blue2"))))
   `(ansi-color-magenta ((,class (:foreground "magenta3" :background "magenta3"))))
   `(ansi-color-cyan ((,class (:foreground "cyan3" :background "cyan3"))))
   `(ansi-color-white ((,class (:foreground "grey90" :background "gray90"))))
   `(ansi-color-bright-black ((,class (:foreground "gray30" :background "gray30"))))
   `(ansi-color-bright-red ((,class (:foreground "red2" :background "red2"))))
   `(ansi-color-bright-green ((,class (:foreground "green2" :background "green2"))))
   `(ansi-color-bright-yellow ((,class (:foreground "yellow2" :background "yellow2"))))
   `(ansi-color-bright-blue ((,class (:foreground "blue1" :background "blue1"))))
   `(ansi-color-bright-magenta ((,class (:foreground "magenta2" :background "magenta2"))))
   `(ansi-color-bright-cyan ((,class (:foreground "cyan2" :background "cyan2"))))
   `(ansi-color-bright-white ((,class (:foreground "white" :background "white"))))

   ;; comint
   `(comint-highlight-input ((,class (:weight bold))))
   `(comint-highlight-prompt ((,class (:inherit minibuffer-prompt))))

   ;; term
   `(term ((,class (:inherit default))))
   `(term-bold ((,class (:inherit ansi-color-bold))))
   `(term-faint ((,class (:inherit ansi-color-faint))))
   `(term-italic ((,class (:inherit ansi-color-italic))))
   `(term-underline ((,class (:inherit ansi-color-underline))))
   `(term-slow-blink ((,class (:inherit ansi-color-slow-blink))))
   `(term-fast-blink ((,class (:inherit ansi-color-fast-blink))))
   `(term-color-black ((,class (:inherit ansi-color-black))))
   `(term-color-red ((,class (:inherit ansi-color-red))))
   `(term-color-green ((,class (:inherit ansi-color-green))))
   `(term-color-yellow ((,class (:inherit ansi-color-yellow))))
   `(term-color-blue ((,class (:inherit ansi-color-blue))))
   `(term-color-magenta ((,class (:inherit ansi-color-magenta))))
   `(term-color-cyan ((,class (:inherit ansi-color-cyan))))
   `(term-color-white ((,class (:inherit ansi-color-white))))
   `(term-color-bright-black ((,class (:inherit ansi-color-bright-black))))
   `(term-color-bright-red ((,class (:inherit ansi-color-bright-red))))
   `(term-color-bright-green ((,class (:inherit ansi-color-bright-green))))
   `(term-color-bright-yellow ((,class (:inherit ansi-color-bright-yellow))))
   `(term-color-bright-blue ((,class (:inherit ansi-color-bright-blue))))
   `(term-color-bright-magenta ((,class (:inherit ansi-color-bright-magenta))))
   `(term-color-bright-cyan ((,class (:inherit ansi-color-bright-cyan))))
   `(term-color-bright-white ((,class (:inherit ansi-color-bright-white))))

   ;; compilation
   `(compilation-error ((,class (:inherit error))))
   `(compilation-warning ((,class (:inherit warning))))
   `(compilation-info ((,class (:inherit success))))
   `(compilation-mode-line-fail ((,class (:weight bold :foreground "Red1" :inherit compilation-error))))
   `(compilation-mode-line-run ((,class (:inherit compilation-warning))))
   `(compilation-mode-line-exit ((,class (:weight bold :foreground "ForestGreen" :inherit compilation-info))))
   `(compilation-line-number ((,class (:inherit font-lock-keyword-face))))
   `(compilation-column-number ((,class (:inherit font-lock-doc-face))))

   ;; bookmark
   `(bookmark-menu-bookmark ((,class (:weight bold))))
   `(bookmark-menu-heading ((,class (:inherit font-lock-type-face))))
   `(bookmark-face ((,class (:foreground "DarkOrange1" :background "White"))))

   ;; vterm
   `(vterm-color-black ((,class (:inherit term-color-black))))
   `(vterm-color-red ((,class (:inherit term-color-red))))
   `(vterm-color-green ((,class (:inherit term-color-green))))
   `(vterm-color-yellow ((,class (:inherit term-color-yellow))))
   `(vterm-color-blue ((,class (:inherit term-color-blue))))
   `(vterm-color-magenta ((,class (:inherit term-color-magenta))))
   `(vterm-color-cyan ((,class (:inherit term-color-cyan))))
   `(vterm-color-white ((,class (:inherit term-color-white))))
   `(vterm-color-underline ((,class (:inherit default))))
   `(vterm-color-inverse-video ((,class (:inherit default))))

   ;; vundo
   `(vundo-default ((,class (:inherit default))))
   `(vundo-node ((,class (:inherit vundo-default))))
   `(vundo-stem ((,class (:inherit vundo-default))))
   `(vundo-highlight ((,class (:weight bold :foreground "red" :inherit vundo-node))))

   ;; calendar
   `(calendar-today ((,class (:underline t))))
   `(diary ((,class (:foreground "red1"))))
   `(holiday ((,class (:background "pink"))))
   `(calendar-weekday-header ((,class (:inherit font-lock-constant-face))))
   `(calendar-weekend-header ((,class (:inherit font-lock-comment-face))))
   `(calendar-month-header ((,class (:inherit font-lock-function-name-face))))

   ;; outline
   `(outline-1 ((,class (:weight bold))))
   `(outline-2 ((,class (:weight bold))))
   `(outline-3 ((,class (:weight bold))))
   `(outline-4 ((,class (:weight bold))))
   `(outline-5 ((,class (:weight bold))))
   `(outline-6 ((,class (:weight bold))))
   `(outline-7 ((,class (:weight bold))))
   `(outline-8 ((,class (:weight bold))))

   ;; org-mode
   `(org-default ((,class (:inherit default))))
   `(org-hide ((,class (:foreground "White" :inherit fixed-pitch))))
   `(org-dispatcher-highlight ((,class (:weight bold :foreground "DarkBlue" :background "SlateGray1"))))
   `(org-level-1 ((,class (:inherit outline-1))))
   `(org-level-2 ((,class (:inherit outline-2))))
   `(org-level-3 ((,class (:inherit outline-3))))
   `(org-level-4 ((,class (:inherit outline-4))))
   `(org-level-5 ((,class (:inherit outline-5))))
   `(org-level-6 ((,class (:inherit outline-6))))
   `(org-level-7 ((,class (:inherit outline-7))))
   `(org-level-8 ((,class (:inherit outline-8))))
   `(org-special-keyword ((,class (:inherit shadow))))
   `(org-drawer ((t nil)))
   `(org-property-value ((t (nil))))
   `(org-column ((,class (:background "grey90"))))
   `(org-column-title ((,class (:weight bold :underline t :background "grey90"))))
   `(org-agenda-column-dateline ((,class (:inherit org-column))))
   `(org-warning ((,class (:inherit font-lock-warning-face))))
   `(org-archived ((,class (:inherit shadow))))
   `(org-cite ((,class (:inherit link))))
   `(org-cite-key ((,class (:inherit link))))
   `(org-link ((,class (:inherit link))))
   `(org-footnote ((,class (:underline t :foreground "Purple"))))
   `(org-ellipsis ((,class (:underline t :foreground "DarkGoldenrod"))))
   `(org-target ((,class (:underline t))))
   `(org-date ((,class (:inherit (link fixed-pitch)))))
   `(org-date-selected ((,class (:inverse-video t :foreground "Red1"))))
   `(org-sexp-date ((,class (:foreground "Purple"))))
   `(org-tag ((,class (:weight bold))))
   `(org-list-dt ((,class (:weight bold))))
   `(org-todo ((,class (:weight bold :foreground "Red1"))))
   `(org-done ((,class (:weight bold :foreground "ForestGreen"))))
   `(org-agenda-done ((,class (:foreground "ForestGreen"))))
   `(org-headline-todo ((,class (:foreground "IndianRed1"))))
   `(org-headline-done ((,class (:foreground "grey75" :weight normal :strike-through t :slant italic))))
   `(org-priority ((,class (:inherit font-lock-keyword-face))))
   `(org-checkbox ((,class (:inherit bold))))
   `(org-checkbox-statistics-todo ((,class (:inherit org-todo))))
   `(org-checkbox-statistics-done ((,class (:inherit org-done))))
   `(org-table ((,class (:foreground "Blue1" :inherit fixed-pitch))))
   `(org-table-header ((,class (:foreground "Black" :background "LightGray" :inherit org-table))))
   `(org-formula ((,class (:foreground "Firebrick" :inherit fixed-pitch))))
   `(org-code ((t (nil))))
   `(org-meta-line ((,class (:inherit org-document-info-keyword))))
   `(org-document-title ((t nil)))
   `(org-document-info ((,class (:foreground "midnight blue"))))
   `(org-document-info-keyword ((,class (:inherit shadow))))
   `(org-block ((,class (,@(and (>= emacs-major-version 27) '(:extend t))))))
   `(org-block-begin-line ((,class (,@(and (>= emacs-major-version 27) '(:extend t))
                                    :inherit shadow))))
   `(org-block-end-line ((,class (,@(and (>= emacs-major-version 27) '(:extend t))
                                  :inherit org-block-begin-line))))
   `(org-verbatim ((t (nil))))
   `(org-quote ((,class (:inherit org-block))))
   `(org-verse ((,class (:inherit org-block))))
   `(org-clock-overlay ((,class (:foreground "black" :background "LightGray"))))
   `(org-agenda-structure ((,class (:foreground "blue"))))
   `(org-agenda-structure-secondary ((,class (:inherit org-agenda-structure))))
   `(org-agenda-structure-filter ((t (nil))))
   `(org-agenda-date ((,class (:inherit org-agenda-structure))))
   `(org-agenda-date-today ((,class (:weight bold :slant italic :inherit org-agenda-date))))
   `(org-agenda-date-weekend-today ((,class (:inherit org-agenda-date-today))))
   `(org-agenda-clocking ((,class (:inherit secondary-selection))))
   `(org-agenda-date-weekend ((,class (:weight bold :inherit org-agenda-date))))
   `(org-scheduled ((,class (:inherit default))))
   `(org-scheduled-today ((,class (:inherit org-scheduled-today))))
   `(org-agenda-dimmed-todo-face ((,class (:foreground "grey50"))))
   `(org-scheduled-previously ((,class (:foreground "Firebrick"))))
   `(org-imminent-deadline ((,class (:inherit org-warning))))
   `(org-upcoming-deadline ((,class (:foreground "Firebrick"))))
   `(org-upcoming-distant-deadline ((,class (:inherit org-default))))
   `(org-agenda-restriction-lock ((,class (:background "#eeeeee"))))
   `(org-agenda-filter-tags ((,class (:inherit mode-line))))
   `(org-agenda-filter-category ((,class (:inherit mode-line))))
   `(org-agenda-filter-effort ((,class (:inherit mode-line))))
   `(org-agenda-filter-regexp ((,class (:inherit mode-line))))
   `(org-time-grid ((,class (:foreground "DarkGoldenrod"))))
   `(org-agenda-current-time ((,class (:inherit org-time-grid))))
   `(org-agenda-diary ((,class (:inherit default))))
   `(org-agenda-calendar-event ((,class (:inherit default))))
   `(org-agenda-calendar-sexp ((,class (:inherit default))))
   `(org-latex-and-related ((,class (:foreground "SaddleBrown"))))
   `(org-macro ((,class (:inherit org-latex-and-related))))
   `(org-tag-group ((,class (:inherit org-tag))))
   `(org-mode-line-clock ((,class (:inherit mode-line))))
   `(org-mode-line-clock-overrun ((,class (:background "red" :inherit mode-line))))

   ;; dired
   `(dired-header ((,class (:inherit font-lock-type-face))))
   `(dired-mark ((,class (:inherit font-lock-constant-face))))
   `(dired-marked ((,class (:inherit warning))))
   `(dired-flagged ((,class (:inherit error))))
   `(dired-warning ((,class (:inherit font-lock-warning-face))))
   `(dired-perm-write ((,class (:inherit font-lock-comment-delimiter-face))))
   `(dired-set-id ((,class (:inherit font-lock-warning-face))))
   `(dired-directory ((,class (:foreground "blue"))))
   `(dired-symlink ((,class (:foreground "magenta"))))
   `(dired-broken-symlink ((,class (:weight bold :foreground "yellow1" :background "red1"))))
   `(dired-special ((,class (:inherit font-lock-variable-name-face))))
   `(dired-ignored ((,class (:inherit shadow))))

   ;; widget
   `(widget-documentation ((,class (:foreground "dark green"))))
   `(widget-button ((,class (:weight bold))))
   `(widget-field ((,class (,@(and (>= emacs-major-version 27) '(:extend t))
                            :background "gray85"))))
   `(widget-single-line-field ((,class (:background "gray85"))))
   `(widget-inactive ((,class (:inherit shadow))))
   `(widget-button-pressed ((,class (:foreground "red1"))))

   ;; gnus
   `(gnus-group-news-1-empty ((,class (:foreground "ForestGreen"))))
   `(gnus-group-news-1 ((,class (:weight bold :inherit gnus-group-news-1-empty))))
   `(gnus-group-news-2-empty ((,class (:foreground "CadetBlue4"))))
   `(gnus-group-news-2 ((,class (:weight bold :inherit gnus-group-news-2-empty))))
   `(gnus-group-news-3-empty ((t (nil))))
   `(gnus-group-news-3 ((,class (:weight bold :inherit gnus-group-news-3-empty))))
   `(gnus-group-news-4-empty ((t (nil))))
   `(gnus-group-news-4 ((,class (:weight bold :inherit gnus-group-news-4-empty))))
   `(gnus-group-news-5-empty ((t (nil))))
   `(gnus-group-news-5 ((,class (:weight bold :inherit gnus-group-news-5-empty))))
   `(gnus-group-news-6-empty ((t (nil))))
   `(gnus-group-news-6 ((,class (:weight bold :inherit gnus-group-news-6-empty))))
   `(gnus-group-news-low-empty ((,class (:foreground "DarkGreen"))))
   `(gnus-group-news-low ((,class (:weight bold :inherit gnus-group-news-low-empty))))
   `(gnus-group-mail-1-empty ((,class (:foreground "DeepPink3"))))
   `(gnus-group-mail-1 ((,class (:weight bold :inherit gnus-group-mail-1-empty))))
   `(gnus-group-mail-2-empty ((,class (:foreground "HotPink3"))))
   `(gnus-group-mail-2 ((,class (:weight bold :inherit gnus-group-mail-2-empty))))
   `(gnus-group-mail-3-empty ((,class (:foreground "magenta4"))))
   `(gnus-group-mail-3 ((,class (:weight bold :inherit gnus-group-mail-3-empty))))
   `(gnus-group-mail-low-empty ((,class (:foreground "DeepPink4"))))
   `(gnus-group-mail-low ((,class (:weight bold :inherit gnus-group-mail-low-empty))))
   `(gnus-summary-selected ((,class (,@(and (>= emacs-major-version 27) '(:extend t))
                                     :underline t))))
   `(gnus-summary-cancelled ((,class (,@(and (>= emacs-major-version 27) '(:extend t))
                                      :foreground "yellow" :background "black"))))
   `(gnus-summary-normal-ticked ((,class (,@(and (>= emacs-major-version 27) '(:extend t))
                                          :foreground "firebrick"))))
   `(gnus-summary-high-ticked ((,class (:weight bold :inherit gnus-summary-normal-ticked))))
   `(gnus-summary-low-ticked ((,class (:slant italic :inherit gnus-summary-normal-ticked))))
   `(gnus-summary-normal-ancient ((,class (,@(and (>= emacs-major-version 27) '(:extend t))
                                           :foreground "RoyalBlue"))))
   `(gnus-summary-high-ancient ((,class (:weight bold :inherit gnus-summary-normal-ancient))))
   `(gnus-summary-low-ancient ((,class (:slant italic :inherit gnus-summary-normal-ancient))))
   `(gnus-summary-normal-undownloaded ((,class (,@(and (>= emacs-major-version 27) '(:extend t))
                                                :weight normal :foreground "cyan4"))))
   `(gnus-summary-high-undownloaded ((,class (:weight bold :inherit gnus-summary-normal-undownloaded))))
   `(gnus-summary-low-undownloaded ((,class (:slant italic :inherit gnus-summary-normal-undownloaded))))
   `(gnus-summary-normal-unread ((,class (,@(and (>= emacs-major-version 27) '(:extend t))))))
   `(gnus-summary-high-unread ((,class (:weight bold :inherit gnus-summary-normal-unread))))
   `(gnus-summary-low-unread ((,class (:slant italic :inherit gnus-summary-normal-unread))))
   `(gnus-summary-normal-read ((,class (:foreground "DarkGreen"))))
   `(gnus-summary-high-read ((,class (:weight bold :inherit gnus-summary-normal-read))))
   `(gnus-summary-low-read ((,class (:slant italic :inherit gnus-summary-normal-read))))
   `(gnus-splash ((,class (:foreground "#888888"))))
   `(gnus-emphasis-bold ((,class (:weight bold))))
   `(gnus-emphasis-italic ((,class (:slant italic))))
   `(gnus-emphasis-underline ((,class (:underline t))))
   `(gnus-emphasis-underline-bold ((,class (:weight bold :underline t))))
   `(gnus-emphasis-underline-italic ((,class (:slant italic :underline t))))
   `(gnus-emphasis-bold-italic ((,class (:weight bold :slant italic))))
   `(gnus-emphasis-underline-bold-italic ((,class (:weight bold :slant italic :underline t))))
   `(gnus-emphasis-strikethru ((,class (:strike-through t))))
   `(gnus-emphasis-highlight-words ((,class (:foreground "yellow" :background "black"))))
   `(gnus-button ((,class (:weight bold))))
   `(gnus-signature ((,class (:slant italic))))
   `(gnus-header ((,class (:inherit variable-pitch-text))))
   `(gnus-header-from ((,class (:foreground "red3" :inherit gnus-header))))
   `(gnus-header-subject ((,class (:foreground "red4" :inherit gnus-header))))
   `(gnus-header-newsgroups ((,class (:slant italic :foreground "MidnightBlue"))))
   `(gnus-header-name ((,class (:foreground "maroon" :inherit gnus-header))))
   `(gnus-header-content ((,class (:slant italic :foreground "indianred4" :inherit gnus-header))))

   ;; mm
   `(mm-command-output ((,class (:foreground "red3"))))
   `(mm-uu-extract ((,class (,@(and (>= emacs-major-version 27) '(:extend t))
                             :foreground "dark green" :background "light yellow"))))

   ;; epa
   `(epa-validity-high ((,class (:weight bold))))
   `(epa-validity-medium ((,class (:slant italic))))
   `(epa-validity-low ((,class (:slant italic))))
   `(epa-validity-disabled ((,class (:slant italic :inverse-video t))))
   `(epa-string ((,class (:foreground "blue4"))))
   `(epa-mark ((,class (:weight bold :foreground "red"))))
   `(epa-field-name ((,class (:weight bold))))
   `(epa-field-body ((,class (:slant italic))))

   ;; message
   `(message-header-to ((,class (:weight bold :foreground "MidnightBlue"))))
   `(message-header-cc ((,class (:foreground "MidnightBlue"))))
   `(message-header-subject ((,class (:weight bold :foreground "navy blue"))))
   `(message-header-newsgroups ((,class (:weight bold :slant italic :foreground "blue4"))))
   `(message-header-other ((,class (:foreground "steel blue"))))
   `(message-header-name ((,class (:foreground "cornflower blue"))))
   `(message-header-xheader ((,class (:foreground "blue"))))
   `(message-separator ((,class (:foreground "brown"))))
   `(message-cited-text-1 ((,class (:foreground "red1"))))
   `(message-cited-text-2 ((,class (:foreground "red4"))))
   `(message-cited-text-3 ((,class (:foreground "OliveDrab4"))))
   `(message-cited-text-4 ((,class (:foreground "SteelBlue4"))))
   `(message-mml ((,class (:foreground "ForestGreen"))))
   `(message-signature-separator ((,class (:weight bold))))

   ;; shr
   `(shr-text ((,class (:inherit variable-pitch-text))))
   `(shr-strike-through ((,class (:strike-through t))))
   `(shr-link ((,class (:inherit link))))
   `(shr-selected-link ((,class (:background "red" :inherit shr-link))))
   `(shr-abbreviation ((,class (:inherit underline))))
   `(shr-sup ((,class (:height 0.8))))
   `(shr-h1 ((,class (:height 1.3 :weight bold))))
   `(shr-h2 ((,class (:weight bold))))
   `(shr-h3 ((,class (:slant italic))))
   `(shr-h4 ((t (nil))))
   `(shr-h5 ((t (nil))))
   `(shr-h6 ((t (nil))))

   ;; speedbar
   `(speedbar-button-face ((,class (:foreground "green4"))))
   `(speedbar-file-face ((,class (:foreground "cyan4"))))
   `(speedbar-directory-face ((,class (:foreground "blue4"))))
   `(speedbar-tag-face ((,class (:foreground "brown"))))
   `(speedbar-selected-face ((,class (:underline t :foreground "red"))))
   `(speedbar-highlight-face ((,class (:background "green"))))
   `(speedbar-separator-face ((,class (:overline "gray" :foreground "white" :background "blue"))))

   ;; eww
   `(eww-form-submit ((,class (:foreground "black" :background "#808080"))))
   `(eww-form-file ((,class (:foreground "black" :background "#808080"))))
   `(eww-form-checkbox ((,class (:foreground "black" :background "lightgrey"))))
   `(eww-form-select ((,class (:foreground "black" :background "lightgrey"))))
   `(eww-form-text ((,class (:foreground "white" :background "#505050"))))
   `(eww-form-textarea ((,class (:foreground "black" :background "#C0C0C0"))))
   `(eww-invalid-certificate ((,class (:weight bold :foreground "red"))))
   `(eww-valid-certificate ((,class (:weight bold :foreground "ForestGreen"))))

   ;; diary
   `(diary-anniversary ((,class (:inherit font-lock-keyword-face))))
   `(diary-time ((,class (:inherit font-lock-variable-name-face))))
   `(diary-button ((t (nil))))

   ;; diff
   `(diff-header ((,class (,@(and (>= emacs-major-version 27) '(:extend t))
                           :background "grey85"))))
   `(diff-file-header ((,class (,@(and (>= emacs-major-version 27) '(:extend t))
                                :weight bold :background "grey75"))))
   `(diff-index ((,class (:inherit diff-file-header))))
   `(diff-hunk-header ((,class (:inherit diff-header))))
   `(diff-removed ((,class (,@(and (>= emacs-major-version 27) '(:extend t))
                            :background "#ffeeee" :inherit diff-changed))))
   `(diff-added ((,class (,@(and (>= emacs-major-version 27) '(:extend t))
                          :background "#eeffee" :inherit diff-changed))))
   `(diff-changed-unspecified ((,class (,@(and (>= emacs-major-version 27) '(:extend t))
                                        :background "grey90" :inherit diff-changed))))
   `(diff-changed ((t (nil))))
   `(diff-indicator-removed ((,class (:foreground "#aa2222" :inherit diff-removed))))
   `(diff-indicator-added ((,class (:foreground "#22aa22" :inherit diff-added))))
   `(diff-indicator-changed ((,class (:foreground "#aaaa22" :inherit diff-changed))))
   `(diff-function ((,class (:inherit diff-header))))
   `(diff-context ((t (,@(and (>= emacs-major-version 27) '(:extend t))))))
   `(diff-nonexistent ((,class (:inherit diff-file-header))))
   `(diff-error ((,class (:weight bold :foreground "red" :background "black"))))
   `(diff-refine-changed ((,class (:background "#ffff55"))))
   `(diff-refine-removed ((,class (:background "#ffcccc" :inherit diff-refine-changed))))
   `(diff-refine-added ((,class (:background "#bbffbb" :inherit diff-refine-changed))))

   ;; xref
   `(xref-file-header ((,class (:inherit compilation-info ))))
   `(xref-line-number ((,class (:inherit compilation-line-number ))))
   `(xref-match ((,class (:inherit match ))))

   ;; ERC
   `(erc-default-face ((t (nil))))
   `(erc-nick-prefix-face ((,class (:weight bold :inherit erc-nick-default-face ))))
   `(erc-my-nick-prefix-face ((,class (:weight bold :inherit erc-nick-default-face ))))
   `(erc-direct-msg-face ((,class (:foreground "IndianRed" ))))
   `(erc-header-line ((,class (:inherit header-line ))))
   `(erc-input-face ((,class (:foreground "brown" ))))
   `(erc-prompt-face ((,class (:weight bold :foreground "Black" :background "lightBlue2" ))))
   `(erc-command-indicator-face ((,class (:weight bold ))))
   `(erc-notice-face ((,class (:inherit shadow))))
   `(erc-action-face ((,class (:weight bold ))))
   `(erc-error-face ((,class (:foreground "red" ))))
   `(erc-my-nick-face ((,class (:weight bold :foreground "brown" ))))
   `(erc-nick-default-face ((,class (:weight bold ))))
   `(erc-nick-msg-face ((,class (:weight bold :foreground "IndianRed" ))))
   `(erc-bold-face ((,class (:weight bold ))))
   `(erc-italic-face ((,class (:slant italic ))))
   `(erc-inverse-face ((,class (:foreground "White" :background "Black" ))))
   `(erc-underline-face ((,class (:underline t ))))
   `(fg:erc-color-face0 ((,class (:foreground "White" ))))
   `(fg:erc-color-face1 ((,class (:foreground "black" ))))
   `(fg:erc-color-face2 ((,class (:foreground "blue4" ))))
   `(fg:erc-color-face3 ((,class (:foreground "green4" ))))
   `(fg:erc-color-face4 ((,class (:foreground "red" ))))
   `(fg:erc-color-face5 ((,class (:foreground "brown" ))))
   `(fg:erc-color-face6 ((,class (:foreground "purple" ))))
   `(fg:erc-color-face7 ((,class (:foreground "orange" ))))
   `(fg:erc-color-face8 ((,class (:foreground "yellow" ))))
   `(fg:erc-color-face9 ((,class (:foreground "green" ))))
   `(fg:erc-color-face10 ((,class (:foreground "lightblue1" ))))
   `(fg:erc-color-face11 ((,class (:foreground "cyan" ))))
   `(fg:erc-color-face12 ((,class (:foreground "blue" ))))
   `(fg:erc-color-face13 ((,class (:foreground "deeppink" ))))
   `(fg:erc-color-face14 ((,class (:foreground "gray50" ))))
   `(fg:erc-color-face15 ((,class (:foreground "gray90" ))))
   `(bg:erc-color-face0 ((,class (:background "White" ))))
   `(bg:erc-color-face1 ((,class (:background "black" ))))
   `(bg:erc-color-face2 ((,class (:background "blue4" ))))
   `(bg:erc-color-face3 ((,class (:background "green4" ))))
   `(bg:erc-color-face4 ((,class (:background "red" ))))
   `(bg:erc-color-face5 ((,class (:background "brown" ))))
   `(bg:erc-color-face6 ((,class (:background "purple" ))))
   `(bg:erc-color-face7 ((,class (:background "orange" ))))
   `(bg:erc-color-face8 ((,class (:background "yellow" ))))
   `(bg:erc-color-face9 ((,class (:background "green" ))))
   `(bg:erc-color-face10 ((,class (:background "lightblue1" ))))
   `(bg:erc-color-face11 ((,class (:background "cyan" ))))
   `(bg:erc-color-face12 ((,class (:background "blue" ))))
   `(bg:erc-color-face13 ((,class (:background "deeppink" ))))
   `(bg:erc-color-face14 ((,class (:background "gray50" ))))
   `(bg:erc-color-face15 ((,class (:background "gray90" ))))
   `(erc-current-nick-face ((,class (:weight bold :foreground "DarkTurquoise" ))))
   `(erc-dangerous-host-face ((,class (:foreground "red" ))))
   `(erc-pal-face ((,class (:weight bold :foreground "Magenta" ))))
   `(erc-fool-face ((,class (:foreground "dim gray" ))))
   `(erc-keyword-face ((,class (:weight bold :foreground "pale green" ))))
   `(erc-timestamp-face ((,class (:weight unspecified :foreground unspecified))))
   `(erc-button ((,class (:weight bold ))))

   ;; mc
   `(mc/cursor-face ((,class (:inverse-video t))))
   `(mc/cursor-bar-face ((,class (:height 1 :background "black"))))
   `(mc/region-face ((,class (:inherit region))))

   ;; Terraform
   `(terraform--resource-name-face ((t nil)))
   `(terraform--resource-type-face ((t nil)))

   ;; Markdown
   `(markdown-header-face-1 ((,class (:inherit outline-1))))
   `(markdown-header-face-2 ((,class (:inherit outline-2))))
   `(markdown-header-face-3 ((,class (:inherit outline-3))))
   `(markdown-header-face-4 ((,class (:inherit outline-4))))
   `(markdown-header-face-5 ((,class (:inherit outline-5))))
   `(markdown-header-face-6 ((,class (:inherit outline-6))))

   ;; Magit
   `(magit-section-highlight ((,class (,@(and (>= emacs-major-version 27) '(:extend t))
                                       :background "grey95"))))
   `(magit-section-heading ((,class (:weight bold ,@(and (>= emacs-major-version 27) '(:extend t)) :foreground "DarkGoldenrod4"))))
   `(magit-section-secondary-heading ((,class (:weight bold ,@(and (>= emacs-major-version 27) '(:extend t))))))
   `(magit-section-heading-selection ((,class (,@(and (>= emacs-major-version 27) '(:extend t)) :foreground "salmon4"))))
   `(magit-section-child-count ((t (nil))))
   `(transient-heading ((,class (:inherit font-lock-keyword-face))))
   `(transient-key ((,class (:inherit font-lock-builtin-face))))
   `(transient-argument ((,class (:inherit font-lock-warning-face))))
   `(transient-value ((,class (:inherit font-lock-string-face))))
   `(transient-inactive-argument ((,class (:inherit shadow))))
   `(transient-inactive-value ((,class (:inherit shadow))))
   `(transient-unreachable ((,class (:inherit shadow))))
   `(transient-active-infix ((,class (:inherit secondary-selection))))
   `(transient-unreachable-key ((t (nil))))
   `(transient-nonstandard-key ((,class (:underline t))))
   `(transient-mismatched-key ((,class (:underline t))))
   `(transient-inapt-suffix ((,class (:slant italic :inherit shadow))))
   `(transient-enabled-suffix ((,class (:weight bold :foreground "black" :background "green"))))
   `(transient-disabled-suffix ((,class (:weight bold :foreground "black" :background "red"))))
   `(transient-higher-level ((,class (:underline t))))
   `(transient-separator ((,class (,@(and (>= emacs-major-version 27) '(:extend t)) :background "grey80"))))
   `(transient-red ((,class (:foreground "red" :inherit transient-key))))
   `(transient-blue ((,class (:foreground "blue" :inherit transient-key))))
   `(transient-amaranth ((,class (:foreground "#E52B50" :inherit transient-key))))
   `(transient-pink ((,class (:foreground "#FF6EB4" :inherit transient-key))))
   `(transient-teal ((,class (:foreground "#367588" :inherit transient-key))))
   `(transient-purple ((,class (:foreground "#a020f0" :inherit transient-key))))
   `(magit-process-ok ((,class (:foreground "green" :inherit magit-section-heading))))
   `(magit-process-ng ((,class (:foreground "red" :inherit magit-section-heading))))
   `(magit-mode-line-process ((,class (:inherit mode-line-emphasis))))
   `(magit-mode-line-process-error ((,class (:inherit error))))
   `(change-log-date ((,class (:inherit font-lock-string-face))))
   `(change-log-name ((,class (:inherit font-lock-constant-face))))
   `(change-log-email ((,class (:inherit font-lock-variable-name-face))))
   `(change-log-file ((,class (:inherit font-lock-function-name-face))))
   `(change-log-list ((,class (:inherit font-lock-keyword-face))))
   `(change-log-conditionals ((,class (:inherit font-lock-variable-name-face))))
   `(change-log-function ((,class (:inherit font-lock-variable-name-face))))
   `(change-log-acknowledgment ((,class (:inherit font-lock-comment-face))))
   `(log-edit-summary ((,class (:inherit font-lock-function-name-face))))
   `(log-edit-header ((,class (:inherit font-lock-keyword-face))))
   `(log-edit-unknown-header ((,class (:inherit font-lock-comment-face))))
   `(git-commit-summary ((,class (:inherit font-lock-type-face))))
   `(git-commit-overlong-summary ((,class (:inherit font-lock-warning-face))))
   `(git-commit-nonempty-second-line ((,class (:inherit font-lock-warning-face))))
   `(git-commit-keyword ((,class (:inherit font-lock-string-face))))
   `(git-commit-pseudo-header ((,class (:inherit font-lock-string-face))))
   `(git-commit-known-pseudo-header ((,class (:inherit font-lock-keyword-face))))
   `(git-commit-comment-branch-local ((,class (:inherit font-lock-variable-name-face))))
   `(git-commit-comment-branch-remote ((,class (:inherit font-lock-variable-name-face))))
   `(git-commit-comment-detached ((,class (:inherit git-commit-comment-branch-local))))
   `(git-commit-comment-heading ((,class (:inherit git-commit-known-pseudo-header))))
   `(git-commit-comment-file ((,class (:inherit git-commit-pseudo-header))))
   `(git-commit-comment-action ((,class (:inherit bold))))
   `(smerge-upper ((,class (,@(and (>= emacs-major-version 27) '(:extend t)) :background "#ffdddd"))))
   `(smerge-lower ((,class (,@(and (>= emacs-major-version 27) '(:extend t)) :background "#ddffdd"))))
   `(smerge-base ((,class (,@(and (>= emacs-major-version 27) '(:extend t)) :background "#ffffaa"))))
   `(smerge-markers ((,class (,@(and (>= emacs-major-version 27) '(:extend t)) :background "grey85"))))
   `(smerge-refined-changed ((t (nil))))
   `(smerge-refined-removed ((,class (:background "#ffbbbb" :inherit smerge-refined-change))))
   `(smerge-refined-added ((,class (:background "#aaffaa" :inherit smerge-refined-change))))
   `(magit-diff-file-heading ((,class (:weight bold ,@(and (>= emacs-major-version 27) '(:extend t))))))
   `(magit-diff-file-heading-highlight ((,class (,@(and (>= emacs-major-version 27) '(:extend t)) :inherit magit-section-highlight))))
   `(magit-diff-file-heading-selection ((,class (,@(and (>= emacs-major-version 27) '(:extend t)) :foreground "salmon4" :inherit magit-diff-file-heading-highlight))))
   `(magit-diff-hunk-heading ((,class (,@(and (>= emacs-major-version 27) '(:extend t)) :foreground "grey20" :background "grey90"))))
   `(magit-diff-hunk-heading-highlight ((,class (,@(and (>= emacs-major-version 27) '(:extend t)) :foreground "grey20" :background "grey80"))))
   `(magit-diff-hunk-heading-selection ((,class (,@(and (>= emacs-major-version 27) '(:extend t)) :foreground "salmon4" :inherit magit-diff-hunk-heading-highlight))))
   `(magit-diff-hunk-region ((,class (,@(and (>= emacs-major-version 27) '(:extend t)) :inherit bold))))
   `(magit-diff-revision-summary ((,class (:inherit magit-diff-hunk-heading))))
   `(magit-diff-revision-summary-highlight ((,class (:inherit magit-diff-hunk-heading-highlight))))
   `(magit-diff-lines-heading ((,class (,@(and (>= emacs-major-version 27) '(:extend t)) :background "LightSalmon3" :inherit magit-diff-hunk-heading-highlight))))
   `(magit-diff-lines-boundary ((,class (,@(and (>= emacs-major-version 27) '(:extend t)) :inherit magit-diff-lines-heading))))
   `(magit-diff-conflict-heading ((,class (:inherit magit-diff-hunk-heading))))
   `(magit-diff-added ((,class (,@(and (>= emacs-major-version 27) '(:extend t))
                                :background "#ddffdd"))))
   `(magit-diff-removed ((,class (,@(and (>= emacs-major-version 27) '(:extend t))
                                  :background "#ffdddd"))))
   `(magit-diff-our ((,class (:inherit magit-diff-removed))))
   `(magit-diff-base ((,class (,@(and (>= emacs-major-version 27) '(:extend t)) :foreground "#aaaa11" :background "#ffffcc"))))
   `(magit-diff-their ((,class (:inherit magit-diff-added))))
   `(magit-diff-context ((,class (,@(and (>= emacs-major-version 27) '(:extend t)) :foreground "grey50"))))
   `(magit-diff-added-highlight ((,class (,@(and (>= emacs-major-version 27) '(:extend t)) :background "#cceecc"))))
   `(magit-diff-removed-highlight ((,class (,@(and (>= emacs-major-version 27) '(:extend t)) :background "#eecccc"))))
   `(magit-diff-our-highlight ((,class (:inherit magit-diff-removed-highlight))))
   `(magit-diff-base-highlight ((,class (,@(and (>= emacs-major-version 27) '(:extend t)) :foreground "#aaaa11" :background "#eeeebb"))))
   `(magit-diff-their-highlight ((,class (:inherit magit-diff-added-highlight))))
   `(magit-diff-context-highlight ((,class (,@(and (>= emacs-major-version 27) '(:extend t)) :foreground "grey50" :background "grey95"))))
   `(magit-diff-whitespace-warning ((,class (:inherit trailing-whitespace))))
   `(magit-diffstat-added ((,class (:foreground "#22aa22"))))
   `(magit-diffstat-removed ((,class (:foreground "#aa2222"))))
   `(which-func ((,class (:inherit font-lock-function-name-face))))
   `(magit-log-graph ((,class (:foreground "grey30"))))
   `(magit-log-author ((,class (:weight normal :slant normal :foreground "firebrick"))))
   `(magit-log-date ((,class (:weight normal :slant normal :foreground "grey30"))))
   `(magit-header-line-log-select ((,class (:inherit bold))))
   `(magit-header-line ((,class (:inherit magit-section-heading))))
   `(magit-header-line-key ((,class (:inherit font-lock-builtin-face))))
   `(magit-dimmed ((,class (:foreground "grey50"))))
   `(magit-hash ((,class (:foreground "grey60"))))
   `(magit-tag ((,class (:foreground "Goldenrod4"))))
   `(magit-branch-remote ((,class (:foreground "DarkOliveGreen4"))))
   `(magit-branch-remote-head ((,class (:box 1 :inherit magit-branch-remote))))
   `(magit-branch-local ((,class (:foreground "SkyBlue4"))))
   `(magit-branch-current ((,class (:box 1 :inherit magit-branch-local))))
   `(magit-branch-upstream ((,class (:slant italic))))
   `(magit-branch-warning ((,class (:inherit warning))))
   `(magit-head ((,class (:inherit magit-branch-local))))
   `(magit-refname ((,class (:foreground "grey30"))))
   `(magit-refname-stash ((,class (:inherit magit-refname))))
   `(magit-refname-wip ((,class (:inherit magit-refname))))
   `(magit-refname-pullreq ((,class (:inherit magit-refname))))
   `(magit-keyword ((,class (:inherit font-lock-string-face))))
   `(magit-keyword-squash ((,class (:inherit font-lock-warning-face))))
   `(magit-signature-good ((,class (:foreground "green"))))
   `(magit-signature-bad ((,class (:weight bold :foreground "red"))))
   `(magit-signature-untrusted ((,class (:foreground "medium aquamarine"))))
   `(magit-signature-expired ((,class (:foreground "orange"))))
   `(magit-signature-expired-key ((,class (:inherit magit-signature-expired))))
   `(magit-signature-revoked ((,class (:foreground "violet red"))))
   `(magit-signature-error ((,class (:foreground "light blue"))))
   `(magit-cherry-unmatched ((,class (:foreground "cyan"))))
   `(magit-cherry-equivalent ((,class (:foreground "magenta"))))
   `(magit-filename ((,class (:weight normal))))
   `(magit-sequence-pick ((,class (:inherit default))))
   `(magit-sequence-stop ((,class (:foreground "DarkOliveGreen4"))))
   `(magit-sequence-part ((,class (:foreground "Goldenrod4"))))
   `(magit-sequence-head ((,class (:foreground "SkyBlue4"))))
   `(magit-sequence-drop ((,class (:foreground "IndianRed"))))
   `(magit-sequence-done ((,class (:inherit magit-hash))))
   `(magit-sequence-onto ((,class (:inherit magit-sequence-done))))
   `(magit-sequence-exec ((,class (:inherit magit-hash))))
   `(magit-bisect-good ((,class (:foreground "DarkOliveGreen"))))
   `(magit-bisect-skip ((,class (:foreground "DarkGoldenrod"))))
   `(magit-bisect-bad ((,class (:foreground "IndianRed4"))))
   `(magit-reflog-commit ((,class (:foreground "green"))))
   `(magit-reflog-amend ((,class (:foreground "magenta"))))
   `(magit-reflog-merge ((,class (:foreground "green"))))
   `(magit-reflog-checkout ((,class (:foreground "blue"))))
   `(magit-reflog-reset ((,class (:foreground "red"))))
   `(magit-reflog-rebase ((,class (:foreground "magenta"))))
   `(magit-reflog-cherry-pick ((,class (:foreground "green"))))
   `(magit-reflog-remote ((,class (:foreground "cyan"))))
   `(magit-reflog-other ((,class (:foreground "cyan"))))
   `(magit-blame-highlight ((,class (,@(and (>= emacs-major-version 27) '(:extend t)) :foreground "black" :background "grey80"))))
   `(magit-blame-margin ((,class (:weight normal :slant normal :inherit magit-blame-highlight))))
   `(magit-blame-dimmed ((,class (:weight normal :slant normal :inherit magit-dimmed))))
   `(magit-blame-heading ((,class (:weight normal :slant normal ,@(and (>= emacs-major-version 27) '(:extend t)) :inherit magit-blame-highlight))))
   `(magit-blame-summary ((t (nil))))
   `(magit-blame-hash ((t (nil))))
   `(magit-blame-name ((t (nil))))
   `(magit-blame-date ((t (nil))))

   ;; ungrouped
   `(fill-column-indicator ((,class (:inherit shadow))))
   `(escape-glyph ((,class (:foreground "brown"))))
   `(homoglyph ((,class (:foreground "brown"))))
   `(child-frame-border ((t (nil))))
   `(glyphless-char ((,class (:height 0.6))))
   `(read-multiple-choice-face ((,class (:weight bold :inherit underline))))
   `(next-error ((,class (:inherit region))))
   `(next-error-message ((,class (,@(and (>= emacs-major-version 27) '(:extend t)))
                                 :inherit highlight)))
   `(separator-line ((,class (:height 0.1 :background "#a0a0a0"))))
   `(confusingly-reordered ((t (nil))))
   `(mouse-drag-and-drop-region ((,class (:inherit region))))
   `(file-name-shadow ((,class (:inherit shadow))))
   `(query-replace ((,class (:inherit isearch))))
   `(match ((,class (:background "khaki1"))))
   `(tabulated-list-fake-header ((,class (:weight bold :underline t :overline t))))
   `(buffer-menu-buffer ((,class (:weight bold))))
   `(ns-working-text-face ((,class (:underline t))))
   `(elisp-shorthand-font-lock-face ((,class (:foreground "cyan" :inherit font-lock-keyword-face))))
   `(eldoc-highlight-function-argument ((,class (:inherit bold))))
   `(tooltip ((,class (:foreground "black" :background "lightyellow" :inherit variable-pitch))))
   `(browse-url-button ((,class (:inherit link))))
   `(rectangle-preview ((,class (:inherit region))))))

(provide-theme 'tok)

;; Local Variables:
;; no-byte-compile: t
;; End:

;;; tok-theme.el ends here
